// uploadStaticToBlob.js
// generated by ChatGPT

const { BlobServiceClient } = require('@azure/storage-blob');
const path = require('path');
const fs = require('fs').promises;

const AZURE_STORAGE_CONNECTION_STRING = process.env.AZURE_STORAGE_CONNECTION_STRING;

console.log("HELLO")
console.log(AZURE_STORAGE_CONNECTION_STRING)

const CONTAINER_NAME = 'assets';
const LOCAL_DIR = path.resolve(__dirname, '.next/static');
const BLOB_PREFIX = '_next/static/';

if (!AZURE_STORAGE_CONNECTION_STRING) {
  console.error('❌ Missing AZURE_STORAGE_CONNECTION_STRING environment variable');
  process.exit(1);
}

async function* walk(dir) {
  for (const entry of await fs.readdir(dir, { withFileTypes: true })) {
    const fullPath = path.join(dir, entry.name);
    if (entry.isDirectory()) {
      yield* walk(fullPath);
    } else {
      yield fullPath;
    }
  }
}

async function main() {
  const blobServiceClient = BlobServiceClient.fromConnectionString(AZURE_STORAGE_CONNECTION_STRING);
  const containerClient = blobServiceClient.getContainerClient(CONTAINER_NAME);

  const exists = await containerClient.exists();
  if (!exists) {
    console.log(`Creating container: ${CONTAINER_NAME}`);
    await containerClient.create({ access: 'blob' });
  }

  console.log(`📁 Uploading from: ${LOCAL_DIR}`);
  for await (const filePath of walk(LOCAL_DIR)) {
    const relativePath = path.relative(LOCAL_DIR, filePath).replace(/\\/g, '/');
    const blobName = BLOB_PREFIX + relativePath;
    const blockBlobClient = containerClient.getBlockBlobClient(blobName);

    console.log(`→ Uploading ${blobName}`);
    await blockBlobClient.uploadFile(filePath);
  }

  console.log('✅ Upload completed');
}

main().catch((err) => {
  console.error('❌ Upload failed', err);
  process.exit(1);
});